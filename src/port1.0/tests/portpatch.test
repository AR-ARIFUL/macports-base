package require tcltest 2
namespace import tcltest::*

set pwd [file normalize $argv0]
set pwd [eval file join {*}[lrange [file split $pwd] 0 end-1]]

source ../../macports1.0/macports_fastload.tcl
package require macports 1.0
array set ui_options {}
#set ui_options(ports_debug)   yes
#set ui_options(ports_verbose) yes
mportinit ui_options

package require portpatch
source ../port_autoconf.tcl
source ./library.tcl
macports_worker_init


test build_getpatchtype {
    Get patch type unit test.
} -body {
    set res [portpatch::build_getpatchtype]
    if {$res != $portutil::autoconf::patch_path} {
	return "FAIL: wrong path"
    }
    return "Get patch type successful."
} -result "Get patch type successful."


test patch_main {
    Patch main unit test.
} -constraints {
    root
} -setup {
    set macosx_version 12

    set subport fondu
    set filespath $pwd/files
    set distpath $pwd/dist
    set usealtworkpath yes
    set altprefix prefix
    set patchfiles {file1.bz2}

    set workpath $pwd/work
    set worksrcpath $workpath/src
    set compiler.cpath /usr/bin/gcc
    set compiler.library_path /usr/lib
    set macosx_deployment_target $pwd/deploy_target

    file mkdir $filespath
    set fd [open $pwd/file w+]
    puts $fd "--- README	2005-08-25 23:49:29.000000000 +0300\n+++ \
	    README.bk	2013-09-08 18:38:42.000000000 +0300 \n@@ -1,4 +1,3 @@ \n\
	    -BUILDING FONDU \n   Just type:\n    $ configure\n    $ make"
    close $fd
    if {[catch {exec tar cjf files/file1.bz2 file}]} {
	return "FAIL: cannot create test patch"
    }

    set mport [mportopen file://.]
    set workername [ditem_key $mport workername]

} -body {
    if {[$workername eval eval_targets patch]} {
	return "FAIL: cannot run patch"
    }
    if {![file exists $pwd/work/fondu-060102/README.bk]} {
	return "FAIL: missing patched file"
    }
    if {![file exists $pwd/work/fondu-060102/README.diff]} {
	return "FAIL: missing patched file"
    }

    return "Patch successful."

} -cleanup {
    file delete -force $filespath
    file delete -force $pwd/file
    file delete -force $pwd/work

} -result "Patch successful."


cleanupTests
